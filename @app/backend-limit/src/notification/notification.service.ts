import { Injectable, OnModuleInit } from '@nestjs/common';
import * as admin from 'firebase-admin';
import { Order } from 'src/order/models/order.model';
import { Customer } from 'src/customer/customer.model';
import { Transport } from 'src/transport/transport.model';
import { User } from 'src/user/user.model';

@Injectable()
export class NotificationService implements OnModuleInit {
  static instance: NotificationService;

  onModuleInit() {
    if (NotificationService.instance == null)
      NotificationService.instance = this;
  }

  static async sendFirebaseMessage(
    receiver: User | Customer,
    body: string,
    title: string,
  ) {
    const fcmToken = receiver.fcmToken;
    const role = receiver instanceof User ? receiver.role : 'CUSTOMER';
    const identificator =
      receiver instanceof User ? receiver.login : receiver.fullname;
  
    try {
      const message: admin.messaging.Message = {
        token: fcmToken,
        notification: {
          body: body,
          title: title,
          // sound: 'default',
        },
        data: {
          role: receiver instanceof User ? receiver.role : 'CUSTOMER',
        },
      };
  
      await admin.messaging().send(message);
  
      console.log(
        `Sended notification to ${role}: ${identificator} ${new Date().toISOString()}`,
      );
    } catch (error) {
      console.error(
        `Error sending notification to ${role}: ${identificator} ${new Date().toISOString()}\n`,
        error,
      );
    }
  }

  static async sendNotificationLoadingStart(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –Ω–∞—á–∞–ª –ø–æ–≥—Ä—É–∑–∫—É –≥—Ä—É–∑–∞ –ø–æ –∑–∞–∫–∞–∑—É #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `–ù–∞—á–∞—Ç–∞ –ø–æ–≥—Ä—É–∑–∫–∞ –≥—Ä—É–∑–∞ –∑–∞–∫–∞–∑–∞ #${order.id}!`,
      );
  }

  static async sendNotificationLoadingEnd(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –∑–∞–≤–µ—Ä—à–∏–ª –ø–æ–≥—Ä—É–∑–∫—É –≥—Ä—É–∑–∞ –ø–æ –∑–∞–∫–∞–∑—É #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–≥—Ä—É–∑–∫–∞ –≥—Ä—É–∑–∞ –∑–∞–∫–∞–∑–∞ #${order.id}!`,
      );
  }

  static async sendNotificationUnloadingStart(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –Ω–∞—á–∞–ª —Ä–∞–∑–≥—Ä—É–∑–∫—É –≥—Ä—É–∑–∞ –ø–æ –∑–∞–∫–∞–∑—É #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `–ù–∞—á–∞—Ç–∞ —Ä–∞–∑–≥—Ä—É–∑–∫–∞ –≥—Ä—É–∑–∞ –∑–∞–∫–∞–∑–∞ #${order.id}!`,
      );
  }

  static async sendNotificationExitToDestinationCargoReciever(
    customer: Customer,
    cargoReciever: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `‚Ä¢ –ì—Ä—É–∑–æ–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ${cargoReciever.fullname}\n‚Ä¢ –¢–∏–ø –¢–°: ${transport.transportType?.description ?? transport.type}\n‚Ä¢ –ì–æ—Å–Ω–æ–º–µ—Ä: ${transport.transportNumber}\n‚Ä¢ –í–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename}\n‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è: ${transport.driver.phoneNumber}\n‚Ä¢ –ì—Ä—É–∑: ${order.name}`,
        `–î–ª—è –≤–∞—Å –æ—Ç–≥—Ä—É–∂–µ–Ω –≥—Ä—É–∑:`,
      );
  }

  static async sendNotificationEntryToDestinationCargoReciever(
    customer: Customer,
    cargoReciever: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `‚Ä¢ –ì—Ä—É–∑–æ–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ${cargoReciever.fullname}\n‚Ä¢ –¢–∏–ø –¢–°: ${transport.transportType?.description ?? transport.type}\n‚Ä¢ –ì–æ—Å–Ω–æ–º–µ—Ä: ${transport.transportNumber}\n‚Ä¢ –í–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename}\n‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è: ${transport.driver.phoneNumber}\n‚Ä¢ –ì—Ä—É–∑: ${order.name}`,
        `–í–∞–º –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≥—Ä—É–∑:`,
      );
  }

  static async sendNotificationAccepted(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken) {
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –∑–∞–∫–∞–∑ #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `–ó–∞–∫–∞–∑ #${order.id} –Ω–∞–∑–Ω–∞—á–µ–Ω!`,
      );
    }
  }

  static async sendNotificationEntryToCustomer(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –ø—Ä–∏–±—ã–ª –∫ –∑–∞–∫–∞–∑—á–∏–∫—É –Ω–∞ –∑–∞–∫–∞–∑ #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –ø—Ä–∏–±—ã–ª –∫ –∑–∞–∫–∞–∑—á–∏–∫—É!`,
      );
  }

  static async sendNotificationExitToDestination(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –≤ –º–µ—Å—Ç–æ –Ω–∞–∑–∞—á–µ–Ω–∏—è –Ω–∞ –∑–∞–∫–∞–∑ #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `${transport.transportNumber} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –≤ –º–µ—Å—Ç–æ –Ω–∞–∑–∞—á–µ–Ω–∏—è!`,
      );
  }

  static async sendNotificationEntryToDestination(
    customer: Customer,
    order: Order,
    transport: Transport,
  ) {
    if (customer && customer.fcmToken)
      await NotificationService.sendFirebaseMessage(
        customer,
        `${transport.transportType?.description ?? transport.type} ${transport.transportNumber} –ø—Ä–∏–±—ã–ª –≤ –º–µ—Å—Ç–æ –Ω–∞–∑–∞—á–µ–Ω–∏—è –Ω–∞ –∑–∞–∫–∞–∑ #${order.id}, –≤–æ–¥–∏—Ç–µ–ª—å: ${transport.driver.surname} ${transport.driver.name} ${transport.driver.middlename} ${transport.driver.workingPhoneNumber}!`,
        `${transport.transportNumber} –ø—Ä–∏–±—ã–ª –≤ –º–µ—Å—Ç–æ –Ω–∞–∑–∞—á–µ–Ω–∏—è!`,
      );
  }

  static async sendDriverNotification(driver: User, order: Order) {
    if (order) {
      await NotificationService.sendFirebaseMessage(
        driver,
        `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${order.departurePoint.name}
      –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: ${order.destination.name}`,
        'üöö –ù–µ–ø—Ä–∏–Ω—è—Ç—ã–π –∑–∞–∫–∞–∑!',
      );
    }
  }
}
